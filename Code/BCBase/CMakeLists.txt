CMAKE_MINIMUM_REQUIRED(VERSION 3.15.0 FATAL_ERROR)
SET(PROJECTNAME BCBase)
PROJECT(${PROJECTNAME})
ADD_DEFINITIONS("-DBCBASE_API")
SET(CMAKE_CXX_STANDARD 11)

IF(NOT DEFINED Qt5_DIR)
	SET(Qt5_DIR "Qt5_DIR-NOTFOUND" CACHE PATH "Qt5_DIR")
ENDIF()
IF(Qt5_DIR STREQUAL "Qt5_DIR-NOTFOUND")		
	MESSAGE(FATAL_ERROR "Qt5_DIR is null, please specified Qt5Config.cmake location!~")
ENDIF()

IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin_d)	
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin) 
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin_d)   
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin)
ENDIF()

FILE(GLOB SRC_H_FILES "*.h")
FILE(GLOB SRC_CPP_FILES "*.cpp") 
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/..)

FIND_PACKAGE(Qt5 COMPONENTS Xml Widgets REQUIRED)
ADD_LIBRARY(${PROJECTNAME} SHARED ${SRC_H_FILES} ${SRC_CPP_FILES})
TARGET_LINK_LIBRARIES(${PROJECTNAME} Qt5::Xml Qt5::Widgets)
IF(CMAKE_SYSTEM_NAME MATCHES "Linux")   
	TARGET_LINK_LIBRARIES(${PROJECTNAME} debug "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/libDataProperty${CMAKE_DEBUG_POSTFIX}.so" optimized "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/libDataProperty${CMAKE_RELEASE_POSTFIX}.so"
										 debug "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/libMeshData${CMAKE_DEBUG_POSTFIX}.so"     optimized "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/libMeshData${CMAKE_RELEASE_POSTFIX}.so"
										 debug "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/libGeometry${CMAKE_DEBUG_POSTFIX}.so"     optimized "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/libGeometry${CMAKE_RELEASE_POSTFIX}.so")									 
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	TARGET_LINK_LIBRARIES(${PROJECTNAME} debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/DataProperty${CMAKE_DEBUG_POSTFIX}.lib" optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/DataProperty${CMAKE_RELEASE_POSTFIX}.lib"
										 debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/MeshData${CMAKE_DEBUG_POSTFIX}.lib"     optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/MeshData${CMAKE_RELEASE_POSTFIX}.lib"
										 debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/Geometry${CMAKE_DEBUG_POSTFIX}.lib"     optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/Geometry${CMAKE_RELEASE_POSTFIX}.lib")
ENDIF()	
								 
IF(TARGET SolutionDataIO)
	ADD_DEPENDENCIES(${PROJECTNAME} DataProperty MeshData Geometry)
ENDIF()