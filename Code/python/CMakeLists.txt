CMAKE_MINIMUM_REQUIRED(VERSION 3.18.1 FATAL_ERROR)
SET(PROJECTNAME PythonModule)
PROJECT(${PROJECTNAME})
ADD_DEFINITIONS("-DPYTHON_API")

#Qt
IF(NOT DEFINED Qt5_DIR)
	SET(Qt5_DIR "Qt5_DIR-NOTFOUND" CACHE PATH "Qt5_DIR")
	MESSAGE(FATAL_ERROR "Qt5_DIR is null, please find Qt5_config.cmake file position!~")
ENDIF()

FILE(GLOB SRC_H_FILES "*.h")
FILE(GLOB SRC_CPP_FILES "*.cpp")

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${TOP_PROJECT_SOURCE_DIR}/../output/bin_d)    
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${TOP_PROJECT_SOURCE_DIR}/../output/bin) 
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${TOP_PROJECT_SOURCE_DIR}/../output/bin_d)   
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${TOP_PROJECT_SOURCE_DIR}/../output/bin) 

INCLUDE_DIRECTORIES(${TOP_PROJECT_SOURCE_DIR}/../output/python37/include 
					${TOP_PROJECT_SOURCE_DIR})

FIND_PACKAGE(Qt5 COMPONENTS Gui Widgets Core REQUIRED)
SET(CMAKE_AUTOMOC ON)
SOURCE_GROUP("Generated Files" FILES "${TOP_PROJECT_BINARY_DIR}/python/${PROJECTNAME}_autogen/mocs_compilation.cpp")

ADD_LIBRARY(${PROJECTNAME} SHARED ${SRC_H_FILES} ${SRC_CPP_FILES})
								   
TARGET_LINK_LIBRARIES(${PROJECTNAME} Qt5::Gui Qt5::Widgets Qt5::Core)
#TARGET_LINK_LIBRARIES(${PROJECTNAME} debug ${PROJECT_SOURCE_DIR}/../../output/python37/libs/python37_${CMAKE_DEBUG_POSTFIX}.lib optimized ${PROJECT_SOURCE_DIR}/../../output/python37/libs/python37${CMAKE_RELEASE_POSTFIX}.lib)
TARGET_LINK_LIBRARIES(${PROJECTNAME} debug ${PROJECT_SOURCE_DIR}/../../output/python37/libs/python37_d.lib optimized ${PROJECT_SOURCE_DIR}/../../output/python37/libs/python37.lib)
ADD_DEPENDENCIES(${PROJECTNAME} License)