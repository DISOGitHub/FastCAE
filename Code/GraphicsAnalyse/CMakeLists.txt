CMAKE_MINIMUM_REQUIRED(VERSION 3.18.1 FATAL_ERROR)
SET(PROJECTNAME GraphicsAnalyse)
PROJECT(${PROJECTNAME})
ADD_DEFINITIONS("-DGRAPHICSANALYSE_LIBRARY")
#SET_PROPERTY(TARGET ${PROJECTNAME} PROPERTY FOLDER "Post")

#Qt
IF(NOT DEFINED Qt5_DIR)
	SET(Qt5_DIR "Qt5_DIR-NOTFOUND" CACHE PATH "Qt5_DIR")
	MESSAGE(SEND_ERROR "Qt5_DIR is null, please find Qt5_config.cmake file position!~")
ENDIF()
#VTK
IF(NOT DEFINED FASTCAE_VTK_INCLUDE)
	SET(FASTCAE_VTK_INCLUDE "FASTCAE_VTK_INCLUDE-NOTFOUND" CACHE PATH "FASTCAE_VTK_INCLUDE")
	MESSAGE(SEND_ERROR "FASTCAE_VTK_INCLUDE is null, please specified VTK include directory!~")
ENDIF()
IF(NOT DEFINED FASTCAE_VTK_LIBDIR)
	SET(FASTCAE_VTK_LIBDIR "FASTCAE_VTK_LIBDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_LIBDIR")
	MESSAGE(SEND_ERROR "FASTCAE_VTK_LIBDIR is null, please specified VTK release library directory!~")
ENDIF()
IF(NOT DEFINED FASTCAE_VTK_LIBDDIR)
	SET(FASTCAE_VTK_LIBDDIR "FASTCAE_VTK_LIBDDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_LIBDDIR")
	MESSAGE(SEND_ERROR "FASTCAE_VTK_LIBDDIR is null, please specified VTK debug library directory!~")
ENDIF()
IF(NOT DEFINED FASTCAE_VTK_BINDIR)
	SET(FASTCAE_VTK_BINDIR "FASTCAE_VTK_BINDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_BINDIR")
	MESSAGE(SEND_ERROR "FASTCAE_VTK_BINDIR is null, please specified VTK release dll directory!~")
ENDIF()
IF(NOT DEFINED FASTCAE_VTK_BINDDIR)
	SET(FASTCAE_VTK_BINDDIR "FASTCAE_VTK_BINDDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_BINDDIR")
	MESSAGE(FATAL_ERROR "FASTCAE_VTK_BINDDIR is null, please specified VTK release dll directory!~")
ENDIF()

IF(NOT DEFINED FASTCAE_VTK_LIBDS)
	FILE(GLOB FASTCAE_VTK_LIBDS "${FASTCAE_VTK_LIBDDIR}/*.lib")
ENDIF()
IF(NOT DEFINED FASTCAE_VTK_LIBS)
	FILE(GLOB FASTCAE_VTK_LIBS "${FASTCAE_VTK_LIBDIR}/*.lib")
ENDIF()

#FILE(GLOB GraphicsAnalyse_TS_FILE "${TOP_PROJECT_SOURCE_DIR}/GraphicsAnalyse/translations/*.ts")
FILE(GLOB SRC_QRC_FILES "*.qrc")
FILE(GLOB SRC_UI_FILES "*.ui" "CTK/Libs/Visualization/VTK/Widgets/Resources/UI/*.ui" "CTK/Libs/Widgets/Resources/UI/*.ui")
FILE(GLOB SRC_H_FILES "*.h" "CTK/Libs/Core/*.h" "CTK/Libs/Visualization/VTK/Core/*.h" "CTK/Libs/Visualization/VTK/Widgets/*.h" "CTK/Libs/Widgets/*.h")
FILE(GLOB SRC_CPP_FILES "*.cpp" "CTK/Libs/Core/*.cpp" "CTK/Libs/Visualization/VTK/Core/*.cpp" "CTK/Libs/Visualization/VTK/Widgets/*.cpp" "CTK/Libs/Widgets/*.cpp")

#SET_SOURCE_FILES_PROPERTIES(${GraphicsAnalyse_TS_FILE} PROPERTIES OUTPUT_LOCATION "${TOP_PROJECT_SOURCE_DIR}/GraphicsAnalyse/translations")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${TOP_PROJECT_SOURCE_DIR}/../output/bin_d)    
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${TOP_PROJECT_SOURCE_DIR}/../output/bin) 
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${TOP_PROJECT_SOURCE_DIR}/../output/bin_d)   
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${TOP_PROJECT_SOURCE_DIR}/../output/bin) 
SET(FASTCAE_CTK_INCLUDE "${FASTCAE_VTK_INCLUDE}/../../../CTK/include")	

INCLUDE_DIRECTORIES(${TOP_PROJECT_SOURCE_DIR}/SolutionDataIO
					${TOP_PROJECT_SOURCE_DIR}/CurveAnalyse
					${TOP_PROJECT_SOURCE_DIR}/HeuDataSrcIO
					${TOP_PROJECT_SOURCE_DIR}
					${FASTCAE_VTK_INCLUDE}
					${FASTCAE_CTK_INCLUDE})

#FIND_PACKAGE(Qt5 COMPONENTS Core Gui Widgets OpenGL Xml LinguistTools REQUIRED)
FIND_PACKAGE(Qt5 COMPONENTS Core Gui Widgets OpenGL Xml REQUIRED)
#QT5_CREATE_TRANSLATION(GraphicsAnalyse_QM_FILE ${PROJECT_SOURCE_DIR} 
#											   ${PROJECT_SOURCE_DIR}/CTK/Libs/Core
#											   ${PROJECT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Core
#											   ${PROJECT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Widgets
#											   ${PROJECT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Widgets/Resources/UI
#											   ${PROJECT_SOURCE_DIR}/CTK/Libs/Widgets											  
#											   ${PROJECT_SOURCE_DIR}/CTK/Libs/Widgets/Resources/UI	
#											   ${GraphicsAnalyse_TS_FILE} OPTIONS -noobsolete)									  
QT5_ADD_RESOURCES(SRC_Generated_QRC_FILES ${SRC_QRC_FILES})
QT5_WRAP_UI(SRC_Generated_UI_FILES ${SRC_UI_FILES})
SET(CMAKE_AUTOMOC ON)
								  											  											  										 
#SOURCE_GROUP("Translation" FILES ${GraphicsAnalyse_QM_FILE} ${GraphicsAnalyse_TS_FILE})
SOURCE_GROUP("rc" FILES ${SRC_Generated_QRC_FILES} ${SRC_QRC_FILES})
SOURCE_GROUP("Ui" FILES ${SRC_Generated_UI_FILES} ${SRC_UI_FILES})
SOURCE_GROUP("Generated Files" FILES "${TOP_PROJECT_BINARY_DIR}/${PROJECTNAME}/${PROJECTNAME}_autogen/mocs_compilation.cpp")

ADD_LIBRARY(${PROJECTNAME} SHARED #${GraphicsAnalyse_TS_FILE}
								  #${GraphicsAnalyse_QM_FILE}
								  ${SRC_Generated_QRC_FILES}
								  ${SRC_Generated_UI_FILES}
								  ${SRC_H_FILES}
								  ${SRC_CPP_FILES})
								   
TARGET_LINK_LIBRARIES(${PROJECTNAME} Qt5::Core Qt5::Gui Qt5::Widgets Qt5::OpenGL Qt5::Xml "opengl32.lib")
TARGET_LINK_LIBRARIES(${PROJECTNAME} debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/SolutionDataIO${CMAKE_DEBUG_POSTFIX}.lib" optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/SolutionDataIO${CMAKE_RELEASE_POSTFIX}.lib"
									 debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/CurveAnalyse${CMAKE_DEBUG_POSTFIX}.lib"   optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/CurveAnalyse${CMAKE_RELEASE_POSTFIX}.lib"
									 debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/HeuDataSrcIO${CMAKE_DEBUG_POSTFIX}.lib"   optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/HeuDataSrcIO${CMAKE_RELEASE_POSTFIX}.lib")

ADD_DEPENDENCIES(${PROJECTNAME} HeuDataSrcIO)

FOREACH(FASTCAE_VTK_LIBD ${FASTCAE_VTK_LIBDS})
	TARGET_LINK_LIBRARIES(${PROJECTNAME} debug ${FASTCAE_VTK_LIBD})
ENDFOREACH()	
FOREACH(FASTCAE_VTK_LIB ${FASTCAE_VTK_LIBS})
	TARGET_LINK_LIBRARIES(${PROJECTNAME} optimized ${FASTCAE_VTK_LIB})
ENDFOREACH()
