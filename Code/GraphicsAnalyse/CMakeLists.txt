CMAKE_MINIMUM_REQUIRED(VERSION 3.15.0 FATAL_ERROR)
SET(PROJECTNAME GraphicsAnalyse)
PROJECT(${PROJECTNAME})
ADD_DEFINITIONS("-DGRAPHICSANALYSE_LIBRARY")
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

IF(NOT DEFINED Qt5_DIR)
	SET(Qt5_DIR "Qt5_DIR-NOTFOUND" CACHE PATH "Qt5_DIR")
ENDIF()
IF(NOT DEFINED FASTCAE_VTK_INCLUDE)
	SET(FASTCAE_VTK_INCLUDE "FASTCAE_VTK_INCLUDE-NOTFOUND" CACHE PATH "FASTCAE_VTK_INCLUDE")		
ENDIF()
IF(FASTCAE_VTK_INCLUDE STREQUAL "FASTCAE_VTK_INCLUDE-NOTFOUND")		
	MESSAGE(SEND_ERROR "FASTCAE_VTK_INCLUDE is null, please specified VTK include directory!~")
ENDIF()
IF(Qt5_DIR STREQUAL "Qt5_DIR-NOTFOUND")		
	MESSAGE(SEND_ERROR "Qt5_DIR is null, please specified Qt5Config.cmake location!~")
ENDIF()

IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
	IF(NOT DEFINED FASTCAE_VTK_SO_DIR)
		SET(FASTCAE_VTK_SO_DIR "FASTCAE_VTK_SO_DIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_SO_DIR")			
	ENDIF()	
	
	IF(FASTCAE_VTK_SO_DIR STREQUAL "FASTCAE_VTK_SO_DIR-NOTFOUND")		
		MESSAGE(FATAL_ERROR "FASTCAE_VTK_SO_DIR is null, please specified VTK so directory!~")
	ENDIF()
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin)		
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	IF(NOT DEFINED FASTCAE_VTK_LIBDIR)
		SET(FASTCAE_VTK_LIBDIR "FASTCAE_VTK_LIBDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_LIBDIR")			
	ENDIF()
	IF(NOT DEFINED FASTCAE_VTK_LIBDDIR)
		SET(FASTCAE_VTK_LIBDDIR "FASTCAE_VTK_LIBDDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_LIBDDIR")			
	ENDIF()
	IF(NOT DEFINED FASTCAE_VTK_BINDIR)
		SET(FASTCAE_VTK_BINDIR "FASTCAE_VTK_BINDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_BINDIR")			
	ENDIF()
	IF(NOT DEFINED FASTCAE_VTK_BINDDIR)
		SET(FASTCAE_VTK_BINDDIR "FASTCAE_VTK_BINDDIR-NOTFOUND" CACHE PATH "FASTCAE_VTK_BINDDIR")			
	ENDIF()
	
	IF(FASTCAE_VTK_LIBDIR STREQUAL "FASTCAE_VTK_LIBDIR-NOTFOUND")		
		MESSAGE(SEND_ERROR "FASTCAE_VTK_LIBDIR is null, please specified VTK lib directory!~")
	ENDIF()
	IF(FASTCAE_VTK_LIBDDIR STREQUAL "FASTCAE_VTK_LIBDDIR-NOTFOUND")		
		MESSAGE(SEND_ERROR "FASTCAE_VTK_LIBDDIR is null, please specified VTK libd directory!~")
	ENDIF()
	IF(FASTCAE_VTK_BINDIR STREQUAL "FASTCAE_VTK_BINDIR-NOTFOUND")		
		MESSAGE(SEND_ERROR "FASTCAE_VTK_BINDIR is null, please specified VTK bin directory!~")
	ENDIF()
	IF(FASTCAE_VTK_BINDDIR STREQUAL "FASTCAE_VTK_BINDDIR-NOTFOUND")		
		MESSAGE(FATAL_ERROR "FASTCAE_VTK_BINDDIR is null, please specified VTK bind directory!~")
	ENDIF()
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin_d)    
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin) 
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin_d)   
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../../output/bin)	
ENDIF()

#FILE(GLOB GraphicsAnalyse_TS_FILE "${TOP_CMAKE_CURRENT_SOURCE_DIR}/GraphicsAnalyse/translations/*.ts")
FILE(GLOB SRC_QRC_FILES "*.qrc")
FILE(GLOB SRC_UI_FILES "*.ui" "CTK/Libs/Visualization/VTK/Widgets/Resources/UI/*.ui" "CTK/Libs/Widgets/Resources/UI/*.ui")
FILE(GLOB SRC_H_FILES "*.h" "CTK/Libs/Core/*.h" "CTK/Libs/Visualization/VTK/Core/*.h" "CTK/Libs/Visualization/VTK/Widgets/*.h" "CTK/Libs/Widgets/*.h")
FILE(GLOB SRC_CPP_FILES "*.cpp" "CTK/Libs/Core/*.cpp" "CTK/Libs/Visualization/VTK/Core/*.cpp" "CTK/Libs/Visualization/VTK/Widgets/*.cpp" "CTK/Libs/Widgets/*.cpp")
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../SolutionDataIO
					${CMAKE_CURRENT_SOURCE_DIR}/../CurveAnalyse
					${CMAKE_CURRENT_SOURCE_DIR}/../HeuDataSrcIO
					${CMAKE_CURRENT_SOURCE_DIR}/..
					${CMAKE_CURRENT_SOURCE_DIR}
					${FASTCAE_VTK_INCLUDE}
					${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Core
					${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Core
					${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Widgets
					${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Widgets)

#FIND_PACKAGE(Qt5 COMPONENTS Core Gui Widgets OpenGL Xml LinguistTools REQUIRED)
FIND_PACKAGE(Qt5 COMPONENTS Core Gui Widgets OpenGL Xml REQUIRED)
#SET_SOURCE_FILES_PROPERTIES(${GraphicsAnalyse_TS_FILE} PROPERTIES OUTPUT_LOCATION "${TOP_CMAKE_CURRENT_SOURCE_DIR}/GraphicsAnalyse/translations")
#QT5_CREATE_TRANSLATION(GraphicsAnalyse_QM_FILE ${CMAKE_CURRENT_SOURCE_DIR} 
#											   ${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Core
#											   ${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Core
#											   ${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Widgets
#											   ${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Visualization/VTK/Widgets/Resources/UI
#											   ${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Widgets											  
#											   ${CMAKE_CURRENT_SOURCE_DIR}/CTK/Libs/Widgets/Resources/UI	
#											   ${GraphicsAnalyse_TS_FILE} OPTIONS -noobsolete)									  
QT5_ADD_RESOURCES(SRC_Generated_QRC_FILES ${SRC_QRC_FILES})
QT5_WRAP_UI(SRC_Generated_UI_FILES ${SRC_UI_FILES})
SET(CMAKE_AUTOMOC ON)							  											  											  										
#SOURCE_GROUP("Translation" FILES ${GraphicsAnalyse_QM_FILE} ${GraphicsAnalyse_TS_FILE})
SOURCE_GROUP("rc" FILES ${SRC_Generated_QRC_FILES} ${SRC_QRC_FILES})
SOURCE_GROUP("Ui" FILES ${SRC_Generated_UI_FILES} ${SRC_UI_FILES})
SOURCE_GROUP("Generated Files" FILES "${PROJECT_BINARY_DIR}/${PROJECTNAME}_autogen/mocs_compilation.cpp")

ADD_LIBRARY(${PROJECTNAME} SHARED #${GraphicsAnalyse_TS_FILE}
								  #${GraphicsAnalyse_QM_FILE}
								  ${SRC_Generated_QRC_FILES}
								  ${SRC_Generated_UI_FILES}
								  ${SRC_H_FILES}
								  ${SRC_CPP_FILES})								   
TARGET_LINK_LIBRARIES(${PROJECTNAME} Qt5::Core Qt5::Gui Qt5::Widgets Qt5::OpenGL Qt5::Xml)
IF(CMAKE_SYSTEM_NAME MATCHES "Linux")	
	IF(NOT DEFINED FASTCAE_VTK_SOS_0)
		FILE(GLOB FASTCAE_VTK_SOS_0 "${FASTCAE_VTK_SO_DIR}/*.so")
	ENDIF()
	
	FOREACH(FASTCAE_VTK_SO_0 ${FASTCAE_VTK_SOS_0})
		TARGET_LINK_LIBRARIES(${PROJECTNAME} ${FASTCAE_VTK_SO_0})
	ENDFOREACH()
	TARGET_LINK_LIBRARIES(${PROJECTNAME} debug "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/libSolutionDataIO${CMAKE_DEBUG_POSTFIX}.so" optimized "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/libSolutionDataIO${CMAKE_RELEASE_POSTFIX}.so"
										 debug "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/libCurveAnalyse${CMAKE_DEBUG_POSTFIX}.so"   optimized "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/libCurveAnalyse${CMAKE_RELEASE_POSTFIX}.so"
										 debug "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/libHeuDataSrcIO${CMAKE_DEBUG_POSTFIX}.so"   optimized "${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/libHeuDataSrcIO${CMAKE_RELEASE_POSTFIX}.so")	
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	IF(NOT DEFINED FASTCAE_VTK_LIBDS)
		FILE(GLOB FASTCAE_VTK_LIBDS "${FASTCAE_VTK_LIBDDIR}/*.lib")
	ENDIF()
	IF(NOT DEFINED FASTCAE_VTK_LIBS)
		FILE(GLOB FASTCAE_VTK_LIBS "${FASTCAE_VTK_LIBDIR}/*.lib")
	ENDIF()

	FOREACH(FASTCAE_VTK_LIBD ${FASTCAE_VTK_LIBDS})
		TARGET_LINK_LIBRARIES(${PROJECTNAME} debug ${FASTCAE_VTK_LIBD})
	ENDFOREACH()	
	FOREACH(FASTCAE_VTK_LIB ${FASTCAE_VTK_LIBS})
		TARGET_LINK_LIBRARIES(${PROJECTNAME} optimized ${FASTCAE_VTK_LIB})
	ENDFOREACH()
	TARGET_LINK_LIBRARIES(${PROJECTNAME} debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/SolutionDataIO${CMAKE_DEBUG_POSTFIX}.lib" optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/SolutionDataIO${CMAKE_RELEASE_POSTFIX}.lib"
										 debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/CurveAnalyse${CMAKE_DEBUG_POSTFIX}.lib"   optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/CurveAnalyse${CMAKE_RELEASE_POSTFIX}.lib"
										 debug "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG}/HeuDataSrcIO${CMAKE_DEBUG_POSTFIX}.lib"   optimized "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE}/HeuDataSrcIO${CMAKE_RELEASE_POSTFIX}.lib")
	TARGET_LINK_LIBRARIES(${PROJECTNAME} "opengl32.lib")
ENDIF()

IF(TARGET SolutionDataIO)
	ADD_DEPENDENCIES(${PROJECTNAME} SolutionDataIO CurveAnalyse HeuDataSrcIO)
ENDIF()